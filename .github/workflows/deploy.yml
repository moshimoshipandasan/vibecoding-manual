name: Build and Deploy to GitHub Pages

on:
  push:
    branches:
      - main  # main ブランチへのプッシュをトリガー
  workflow_dispatch:  # 手動実行も可能にする

permissions:
  contents: write  # リポジトリへの書き込み権限

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # ソースコードをチェックアウト
      - name: Checkout Source Repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      # Ruby環境をセットアップ
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true  # Gemfileの依存関係をキャッシュ

      # Jekyll依存関係をインストール
      - name: Install Dependencies
        run: |
          gem install bundler
          bundle install

      # Jekyllでサイトをビルド
      - name: Build Jekyll Site
        run: |
          bundle exec jekyll build
        env:
          JEKYLL_ENV: production

      # ビルドしたサイトを別リポジトリにデプロイ
      - name: Deploy to GitHub Pages Repository
        env:
          TARGET_REPO: ${{ github.repository }}-site  # 自動的に -site を付けたリポジトリ名
          TARGET_BRANCH: main
          BUILD_DIR: ./_site
          GITHUB_TOKEN: ${{ secrets.DEPLOY_TOKEN }}  # Personal Access Token
        run: |
          # Gitの設定
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

          # ビルドディレクトリに移動
          cd $BUILD_DIR

          # 新しいGitリポジトリとして初期化
          git init

          # .nojekyll ファイルを追加（Jekyll処理をスキップ）
          touch .nojekyll

          # すべてのファイルをステージング
          git add .

          # コミット
          git commit -m "Deploy from source repository: ${{ github.sha }}"

          # リモートリポジトリを設定してプッシュ
          git remote add origin https://x-access-token:${GITHUB_TOKEN}@github.com/${TARGET_REPO}.git

          # 強制プッシュ（履歴をクリーンに保つ）
          git push -f origin HEAD:${TARGET_BRANCH}

      # デプロイ成功通知
      - name: Deployment Status
        if: success()
        run: |
          echo "✅ Deployment successful!"
          echo "🌐 Your site will be available at: https://${{ github.repository_owner }}.github.io/$(basename ${{ github.repository }}-site)/"

      # デプロイ失敗通知
      - name: Deployment Failed
        if: failure()
        run: |
          echo "❌ Deployment failed. Please check the logs."